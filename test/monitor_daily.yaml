trigger:
  branches:
    include:
      - monitor

# schedules:
#   - cron: "0 7 * * *"  # Runs daily at 7 AM UTC
#     displayName: Daily Monitor
#     branches:
#       include:
#         - monitor
#     always: true

pool:
  vmImage: ubuntu-latest

parameters:
  - name: environment
    type: string
    default: 'uat'
    values:
     - uat
     - prod

variables:
  - name: S3_BUCKET
    value: ${{ format('aabackstop-{0}', parameters.environment) }}
  - name: ENVIRONMENT
    value: ${{ parameters.environment }}

# Link variable group based on environment
- ${{ if eq(parameters.environment, 'uat') }}:
  - group: uat-aws-credentials

- ${{ if eq(parameters.environment, 'prod') }}:
  - group: prod-aws-credentials

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.11'
    addToPath: true
  displayName: 'Use Python 3.11'

- script: |
    python3 -m pip install --upgrade pip
    pip3 install boto3 azure-storage-blob
  displayName: 'Install Python Dependencies'

- script: |
    echo "üîç Running daily sync validation..."
    echo "ENVIRONMENT: $ENVIRONMENT"
    echo "S3_BUCKET: $S3_BUCKET"
    echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:0:4}********"
    echo "AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:0:4}********"
    python3 monitor_lambda.py
  displayName: 'Run Daily Monitor Script'
  workingDirectory: modules/lambda/MonitorLambda
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    ENVIRONMENT: $(ENVIRONMENT)
    S3_BUCKET: $(S3_BUCKET)
    MODE: daily

- task: PublishBuildArtifacts@1
  displayName: 'Publish Sync Log Artifact'
  condition: succeededOrFailed()
  inputs:
    PathtoPublish: 'modules/lambda/MonitorLambda/sync_log.txt'
    ArtifactName: 'SyncLog'
    publishLocation: 'Container'
