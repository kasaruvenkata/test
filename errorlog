trigger:
  branches:
    include:
      - dev

variables:
  azureSubscription: 'akscluster_roadops'
  resourceGroupName: 'azne-rg-roanon-t-aahelp'
  aksClusterName: 'azne-aks-dev-t-aahelp-1'
  aksNamespace: 'default'

stages:
- stage: IntegrateCert
  displayName: "Integrate Wildcard Cert into Dev AKS"
  jobs:
  - job: CreateTLSSecret
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self

    # Step 1: Download cert from Secure Files
    - task: DownloadSecureFile@1
      name: downloadCert
      displayName: "Download wildcard.cert from Secure Files"
      inputs:
        secureFile: 'wildcard.cert'

    # Step 2: Get Dev AKS credentials
    - task: AzureCLI@2
      displayName: "Connect to Dev AKS Cluster"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Connecting to AKS cluster: $AKSCLUSTERNAME..."
          az aks get-credentials \
            --resource-group "$RESOURCEGROUPNAME" \
            --name "$AKSCLUSTERNAME" \
            --overwrite-existing
      env:
        RESOURCEGROUPNAME: $(resourceGroupName)
        AKSCLUSTERNAME: $(aksClusterName)

    # Step 3: Create TLS Secret in Dev AKS
    - task: AzureCLI@2
      displayName: "Create wildcard-tls Secret in Dev"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Creating TLS secret for Dev..."
          ls -l "$(downloadCert.secureFilePath)"

          kubectl create secret generic wildcard-tls \
            --from-file=tls.crt="$(downloadCert.secureFilePath)" \
            -n "$AKSNAMESPACE" --dry-run=client -o yaml | kubectl apply -f -

          echo "âœ… TLS secret 'wildcard-tls' created successfully in namespace '$AKSNAMESPACE'"
      env:
        AKSNAMESPACE: $(aksNamespace)

    # Step 4: Verify Secret
    - task: AzureCLI@2
      displayName: "Verify wildcard-tls Secret in Dev"
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Verifying wildcard-tls secret in Dev cluster..."
          kubectl get secret wildcard-tls -n "$AKSNAMESPACE" -o yaml
      env:
        AKSNAMESPACE: $(aksNamespace)
