# Infra/modules/lambda_monitor/main.tf


provider "aws" {
  region = var.aws_region
}

resource "aws_ecr_repository" "monitor" {
  name = var.ecr_repo_name
}

# Optionally create an IAM role for lambda
resource "aws_iam_role" "lambda_role" {
  count = var.create_role ? 1 : 0
  name  = "${var.function_name}-exec"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [{
      Action = "sts:AssumeRole"
      Effect = "Allow"
      Principal = { Service = "lambda.amazonaws.com" }
    }]
  })
}

resource "aws_iam_role_policy" "lambda_policy" {
  count = var.create_role ? 1 : 0
  name  = "${var.function_name}-policy"
  role  = aws_iam_role.lambda_role[0].id

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = [
          "s3:GetObject",
          "s3:ListBucket"
        ]
        Effect   = "Allow"
        Resource = [
          "arn:aws:s3:::${var.s3_bucket}",
          "arn:aws:s3:::${var.s3_bucket}/*"
        ]
      },
      {
        Action = [
          "secretsmanager:GetSecretValue"
        ]
        Effect = "Allow"
        Resource = "*"
      },
      {
        Action = [
          "ses:SendEmail",
          "ses:SendRawEmail"
        ]
        Effect = "Allow"
        Resource = "*"
      },
      {
        Action = [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
        ]
        Effect = "Allow"
        Resource = "*"
      }
    ]
  })
}

resource "aws_lambda_function" "monitor" {
  function_name = var.function_name
  package_type  = "Image"
  image_uri     = "${aws_ecr_repository.monitor.repository_url}:${var.image_tag}"

  role = var.create_role ? aws_iam_role.lambda_role[0].arn : var.role_arn

  timeout = 300

  environment {
    variables = {
      S3_BUCKET       = var.s3_bucket
      SECRET_NAME     = var.secret_name
      AZURE_CONTAINER = var.environment
      EMAIL_RECIPIENT = var.email_recipient
      EMAIL_SOURCE    = var.email_source
      AWS_REGION      = var.aws_region
    }
  }
}
