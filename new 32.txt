/mnt/data/Infra/monitor_pipeline.yaml

# monitor_pipeline.yaml
# Single parameterized Azure DevOps pipeline to run the monitor for UAT or PROD.
# Usage: set parameter "environment" to "uat" or "prod" when queuing the pipeline, or use schedule.
#
# This pipeline expects the following secure variables to be configured in the pipeline or variable group:
# - AWS_ACCESS_KEY_ID
# - AWS_SECRET_ACCESS_KEY
# - AWS_DEFAULT_REGION (optional, default used if unset)
# - SECRET_NAME (optional; defaults per environment below)
#
# You can override S3_BUCKET/SECRET_NAME per environment via pipeline variables.
#
parameters:
  - name: environment
    displayName: Environment
    type: string
    default: uat
    values:
      - uat
      - prod

trigger: none
schedules:
  - cron: "0 3 * * *"
    displayName: Daily monitor
    branches:
      include:
        - none
    always: true

pool:
  vmImage: ubuntu-latest

variables:
  - name: REPORT_PREFIX
    value: monitor-reports

stages:
  - stage: Monitor
    displayName: Monitor Azure->S3 Sync
    jobs:
      - job: RunMonitor
        displayName: Run monitor for ${{ parameters.environment }}
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.10'
          - script: |
              python -m pip install --upgrade pip
              pip install boto3 azure-storage-blob
            displayName: Install dependencies
          - task: Bash@3
            name: RunMonitorScript
            env:
              AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
              AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
              AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
              # Map environment-specific default values; override these in pipeline variables if needed
              SECRET_NAME: ${{ if eq(parameters.environment, 'prod') }}azneprod${{ else }}azneuat
              AZURE_CONTAINER: ${{ if eq(parameters.environment, 'prod') }}prod${{ else }}uat
              ENV: ${{ parameters.environment }}
              S3_BUCKET: ${{ if eq(parameters.environment, 'prod') }}aabackstop-prod${{ else }}aabackstop-uat
              REPORT_S3_BUCKET: ${{ if eq(parameters.environment, 'prod') }}aabackstop-prod${{ else }}aabackstop-uat
              REPORT_PREFIX: $(REPORT_PREFIX)
            inputs:
              targetType: 'inline'
              script: |
                echo "Running monitor for ENV=${ENV}, S3_BUCKET=${S3_BUCKET}, SECRET_NAME=${SECRET_NAME}"
                python Infra/modules/lambda/MonitorLambda/monitor_lambda.py
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.SourcesDirectory)'
              artifact: 'monitor-${{ parameters.environment }}'
              publishLocation: 'pipeline'
